/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "zmk-helpers/helper.h"
#include "includes/cornix54.h"

// tap windows for ctl alt and gui

#define HM_TAPPING_TERM 250
#define HM_TAPPING_REPEAT 210

// quick tapping for shift

#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 70
#define BASE 0
#define WIN 1
#define LOWER 2
#define RAISE 3
#define ADJUST 4
#define NAVI   5
#define NUM    6
#define DEBUG  7

// https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH1 LH0 RH0 RH1
#define KEYS_T LH1 LH0 RH0 RH1
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&sk { quick-release; };

&sl { ignore-modifiers; };

/ {
    // Activate ADJUST layer by pressing raise and lower

    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };

        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.
        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */

        mb1_mb2: mb1_mb2 {
            compatible = "zmk,behavior-mod-morph";
            label = "MB1_MB2";
            bindings = <&mkp MB1>, <&mkp MB2>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        media_control: media_control {
            compatible = "zmk,behavior-tap-dance";
            label = "MEDIA_CONTROL";
            #binding-cells = <0>;
            bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREV>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        cb_escape {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp TAB    &kp Q     &kp W     &kp E  &kp R  &kp T                                  &kp Y     &kp U  &kp I      &kp O     &kp P     &kp LBKT
&kp ESC    &kp A     &kp S     &kp D  &kp F  &kp G                                  &kp H     &kp J  &kp K      &kp L     &kp SEMI  &kp SQT
&sk LSHFT  &kp Z     &kp X     &kp C  &kp V  &kp B      &kp C_MUTE  &media_control  &kp N     &kp M  &kp COMMA  &kp DOT   &kp FSLH  &sk RSHFT
&kp LCTRL  &kp LGUI  &kp LALT  &mo 4  &mo 1  &kp SPACE                              &kp BSPC  &mo 2  &kp RET    &kp RALT  &kp RGUI  &mo 3
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        layer_1 {
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT                     &kp CARET     &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET
&trans     &kp N1           &kp N2       &kp N3     &kp N4      &kp N5                          &kp NUMBER_6  &kp N7         &kp N8         &kp N9                &kp N0                 &kp DOUBLE_QUOTES
&trans     &none            &none        &none      &kp MINUS   &kp UNDERSCORE  &trans  &trans  &kp PLUS      &kp EQUAL      &kp LESS_THAN  &kp GREATER_THAN      &kp BACKSLASH          &trans
&trans     &trans           &trans       &trans     &trans      &trans                          &trans        &trans         &trans         &trans                &trans                 &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOL_DN>,
                <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };

        layer_2 {
            bindings = <
&trans  &msc SCRL_UP    &mmv MOVE_UP    &none            &none   &none                   &none     &none          &none      &none      &none   &none
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none   &none                   &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &none   &none
&trans  &msc SCRL_DOWN  &msc SCRL_LEFT  &msc SCRL_RIGHT  &none   &none     &none  &none  &kp HOME  &kp PAGE_DOWN  &kp PG_UP  &kp END    &none   &trans
&trans  &trans          &trans          &trans           &trans  &mb1_mb2                &trans    &trans         &trans     &trans     &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                             &kp F7      &kp F8  &kp F9  &kp F10  &kp F11          &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                       &none       &none   &none   &none    &kp PRINTSCREEN  &none
&trans      &none         &none         &none         &none         &none         &out OUT_TOG  &none  &none       &none   &none   &none    &none            &trans
&trans      &trans        &trans        &trans        &trans        &trans                             &kp DELETE  &trans  &trans  &trans   &trans           &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp N1  &trans  &kp N2  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp N5  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N3  &trans  &kp N4  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
